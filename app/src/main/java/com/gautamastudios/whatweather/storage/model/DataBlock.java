package com.gautamastudios.whatweather.storage.model;

import android.arch.persistence.room.ColumnInfo;
import android.arch.persistence.room.Entity;
import android.arch.persistence.room.Ignore;
import android.arch.persistence.room.PrimaryKey;
import android.content.ContentValues;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;

/**
 * A data block object represents the various weather phenomena occurring over a period of time. Such objects contain
 * the following properties:
 * <p>
 * {@link DataBlock#data} required <br>
 * An array of {@link DataPoint}, ordered by time, which together describe the
 * weather conditions at the requested location over time.
 * <p>
 * {@link DataBlock#summary} optional <br>
 * A human-readable summary of this data block.
 * <p>
 * {@link DataBlock#icon} optional <br>
 * A machine-readable text summary of this data block. (May take on the same values as the icon property of
 * {@link DataPoint}.)
 */
@Entity(tableName = DataBlock.TABLE_NAME)
public class DataBlock {

    public static final String TABLE_NAME = "datablock";
    public static final String FIELD_PRIMARY_KEY = "primary_key";
    public static final String FIELD_SUMMARY = "summary";
    public static final String FIELD_ICON = "icon";
    public static final String FIELD_DATA_BLOCK_TYPE = "data_block_type";

    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name = FIELD_PRIMARY_KEY)
    public long autoGeneratedID;

    @Ignore
    @SerializedName("data")
    private List<DataPoint> data;

    @ColumnInfo(name = FIELD_SUMMARY)
    public String summary;

    @ColumnInfo(name = FIELD_ICON)
    public String icon;

    @ColumnInfo(name = FIELD_DATA_BLOCK_TYPE)
    public int type;

    public void setDataBlockType(@DataPointType int type) {
        this.type = type;
    }

    /**
     * Create a new {@link DataBlock} from the specified {@link ContentValues}.
     *
     * @param values A {@link ContentValues} that contains {@link #FIELD_PRIMARY_KEY}, {@link #FIELD_SUMMARY},
     *               {@link #FIELD_ICON}, {@link #FIELD_DATA_BLOCK_TYPE}
     * @return An instance of {@link DataBlock}.
     */
    public static DataBlock fromContentValues(ContentValues values) {
        final DataBlock dataBlock = new DataBlock();
        if (values.containsKey(FIELD_PRIMARY_KEY)) {
            dataBlock.autoGeneratedID = values.getAsLong(FIELD_PRIMARY_KEY);
        }
        if (values.containsKey(FIELD_SUMMARY)) {
            dataBlock.summary = values.getAsString(FIELD_SUMMARY);
        }
        if (values.containsKey(FIELD_ICON)) {
            dataBlock.icon = values.getAsString(FIELD_ICON);
        }
        if (values.containsKey(FIELD_DATA_BLOCK_TYPE)) {
            dataBlock.type = values.getAsInteger(FIELD_DATA_BLOCK_TYPE);
        }
        return dataBlock;
    }

    public List<DataPoint> getData() {
        return data;
    }

    public List<DataPoint> getData(@DataPointType int type) {
        if (data == null) {
            return new ArrayList<>();
        }

        for (DataPoint dataPoint : data) {
            dataPoint.setDataPointType(type);
        }
        return data;
    }
}
